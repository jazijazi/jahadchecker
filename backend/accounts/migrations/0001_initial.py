# Generated by Django 5.2 on 2025-09-21 11:19

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tools',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('desc', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'ابزار دسترسی',
                'verbose_name_plural': 'ابزارهای دسترسی',
            },
        ),
        migrations.CreateModel(
            name='Apis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], max_length=50)),
                ('url', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(message='فرمت URL نادرست است. باید با / شروع شود و فقط شامل حروف، اعداد، /، - و _ باشد.', regex='^\\/[a-zA-Z0-9_\\-\\/]*\\/?$')])),
                ('desc', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'نام دسترسی',
                'verbose_name_plural': 'لیست  دسترسی ها',
                'indexes': [models.Index(fields=['method', 'url'], name='accounts_ap_method_b01f96_idx'), models.Index(fields=['url'], name='accounts_ap_url_b0c98c_idx'), models.Index(fields=['method'], name='accounts_ap_method_d5cb30_idx')],
                'unique_together': {('method', 'url')},
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('desc', models.CharField(blank=True, max_length=250, null=True)),
                ('apis', models.ManyToManyField(related_name='rrolesapis', related_query_name='rolesapis', to='accounts.apis')),
                ('tools', models.ManyToManyField(blank=True, related_name='rroletools', related_query_name='roletools', to='accounts.tools')),
            ],
            options={
                'verbose_name': 'نام نقش',
                'verbose_name_plural': 'لیست نقش ها',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'کاربر با این نام کاربری موجود است'}, help_text='اجباری.کمتر از 25 کاراکتر. فقط حروف و اعداد استفاده کنید', max_length=25, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'فقط حروف و اعداد استفاده کنید')], verbose_name='username')),
                ('first_name_fa', models.CharField(blank=True, max_length=255, null=True, verbose_name='نام فارسی')),
                ('last_name_fa', models.CharField(blank=True, max_length=255, null=True, verbose_name='نام خانوادگی فارسی')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='آدرس')),
                ('company', models.ForeignKey(blank=True, help_text='شرکت مرتبط با این کاربر', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='common.company', verbose_name='شرکت')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('roles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rrole', to='accounts.roles')),
            ],
            options={
                'verbose_name': 'نام کاربران',
                'verbose_name_plural': 'لیست کاربران',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('subject', models.CharField(max_length=500, verbose_name='موضوع')),
                ('text', models.CharField(max_length=2000, verbose_name='متن')),
                ('is_read', models.BooleanField(default=False, verbose_name='وضعیت خوانده شده')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL, verbose_name='گیرنده')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL, verbose_name='فرستنده')),
            ],
            options={
                'verbose_name': 'اعلان',
                'verbose_name_plural': 'اعلان ها',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['receiver', '-created_at'], name='accounts_no_receive_f7c48c_idx'), models.Index(fields=['sender', '-created_at'], name='accounts_no_sender__aa6bf8_idx')],
            },
        ),
    ]
