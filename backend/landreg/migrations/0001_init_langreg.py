# Generated by Django 5.2 on 2025-09-23 09:26

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IrrigationTypDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('title', models.CharField(max_length=100, verbose_name='عنوان')),
            ],
            options={
                'verbose_name': 'نوع آبیاری',
                'verbose_name_plural': 'انواع آبیاری',
            },
        ),
        migrations.CreateModel(
            name='LandUseDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('title', models.CharField(max_length=100, verbose_name='عنوان')),
            ],
            options={
                'verbose_name': 'نوع کاربری',
                'verbose_name_plural': 'انواع کاربری',
            },
        ),
        migrations.CreateModel(
            name='Pelak',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('number', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True, verbose_name='شماره پلاک')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='عنوان پلاک')),
                ('verify', models.BooleanField(default=False, verbose_name='تایید نهایی شده؟')),
                ('verifydata', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تایید نهایی شدن')),
                ('border', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rusercreatedpelaks', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد شده توسط')),
                ('provinces', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rprovincecpelak', to='common.province', verbose_name='استان مربوطه')),
                ('verifyby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ruserverifydplaks', to=settings.AUTH_USER_MODEL, verbose_name='تایید نهایی توسط')),
            ],
            options={
                'verbose_name': 'پلاک',
                'verbose_name_plural': 'پلاک ها',
            },
        ),
        migrations.CreateModel(
            name='Cadaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('border', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326, verbose_name='مرز')),
                ('uniquecode', models.CharField(max_length=100, unique=True, verbose_name='کد یکتا')),
                ('jaam_code', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(code='invalid_jaam_code', message='این فیلد فقط می\u200cتواند شامل اعداد باشد (0-9)', regex='^\\d+$')], verbose_name='کد جام')),
                ('plak_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام پلاک')),
                ('plak_asli', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(code='invalid_jaam_code', message='این فیلد فقط می\u200cتواند شامل اعداد باشد (0-9)', regex='^\\d+$')], verbose_name='پلاک اصلی')),
                ('plak_farei', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(code='invalid_jaam_code', message='این فیلد فقط می\u200cتواند شامل اعداد باشد (0-9)', regex='^\\d+$')], verbose_name='پلاک فرعی')),
                ('bakhsh_sabti', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(code='invalid_jaam_code', message='این فیلد فقط می\u200cتواند شامل اعداد باشد (0-9)', regex='^\\d+$')], verbose_name='بخش ثبتی')),
                ('nahiye_sabti', models.CharField(blank=True, max_length=100, null=True, verbose_name='ناحیه ثبتی')),
                ('area', models.FloatField(blank=True, help_text='مساحت به متر مربع', null=True, verbose_name='مساحت')),
                ('owner_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام مالک')),
                ('owner_lastname', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام خانوادگی مالک')),
                ('fathername', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام پدر')),
                ('national_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='کد ملی')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='شماره موبایل')),
                ('ownership_kinde', models.CharField(blank=True, choices=[('ششدانگ', 'ششدانگ'), ('مشاع', 'مشاع')], max_length=20, null=True, verbose_name='نوع مالکیت')),
                ('consulate_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام مشاور')),
                ('nezarat_type', models.CharField(choices=[('سازمان نقشه برداری', 'سازمان نقشه برداری'), ('شمیم', 'شمیم'), ('ارتوی دارای تایید', 'ارتوی دارای تایید')], max_length=50, verbose_name='نوع نظارت')),
                ('project_name', models.CharField(choices=[('امور اراضی', 'امور اراضی'), ('دریاچه', 'دریاچه'), ('رودخانه مرزی', 'رودخانه مرزی')], max_length=50, verbose_name='نام پروژه')),
                ('nezart_verify_date', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تایید نظارت')),
                ('status', models.IntegerField(choices=[(1, 'بدون تغییر'), (2, 'دارای تغییر جزئی'), (3, 'تفکیک شده'), (4, 'کاملاً غیرهمخوان'), (5, 'بدون تصمیم')], default=5, verbose_name='وضعیت')),
                ('irrigation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rirridationcadaster', to='landreg.irrigationtypdomain')),
                ('land_use', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rlandusecadaster', to='landreg.landusedomain')),
                ('pelak', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rpelakcadasters', to='landreg.pelak', verbose_name='پلاک')),
            ],
            options={
                'verbose_name': 'کاداستر',
                'verbose_name_plural': 'کاداسترها',
            },
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('border', django.contrib.gis.db.models.fields.PointField(help_text='موقعیت جغرافیایی نقطه فلگ', srid=4326, verbose_name='موقعیت نقطه')),
                ('description', models.TextField(blank=True, help_text='توضیحات اضافی در مورد فلگ', max_length=512, null=True, verbose_name='توضیحات')),
                ('status', models.IntegerField(choices=[(1, 'بدون تغییر'), (2, 'دارای تغییر جزئی'), (3, 'تفکیک شده'), (4, 'کاملاً غیرهمخوان')], default=1, help_text='وضعیت فعلی فلگ', verbose_name='وضعیت')),
                ('cadaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='landreg.cadaster', verbose_name='کاداستر')),
                ('createdby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_flags', to=settings.AUTH_USER_MODEL, verbose_name='ایجاد شده توسط')),
            ],
            options={
                'verbose_name': 'فلگ',
                'verbose_name_plural': 'فلگ\u200cها',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='landreg_fla_status_8f8d24_idx'), models.Index(fields=['cadaster'], name='landreg_fla_cadaste_2b0b16_idx'), models.Index(fields=['createdby'], name='landreg_fla_created_ea418d_idx'), models.Index(fields=['created_at', 'status'], name='landreg_fla_created_b93399_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='pelak',
            index=models.Index(fields=['number'], name='landreg_pel_number_9d352a_idx'),
        ),
        migrations.AddIndex(
            model_name='pelak',
            index=models.Index(fields=['verify', 'verifydata'], name='landreg_pel_verify_de0aaf_idx'),
        ),
        migrations.AddIndex(
            model_name='pelak',
            index=models.Index(fields=['created_at'], name='landreg_pel_created_56b06c_idx'),
        ),
        migrations.AddIndex(
            model_name='cadaster',
            index=models.Index(fields=['uniquecode'], name='landreg_cad_uniquec_ebfaf9_idx'),
        ),
        migrations.AddIndex(
            model_name='cadaster',
            index=models.Index(fields=['plak_asli', 'plak_farei'], name='landreg_cad_plak_as_9a60f1_idx'),
        ),
        migrations.AddIndex(
            model_name='cadaster',
            index=models.Index(fields=['national_code'], name='landreg_cad_nationa_312966_idx'),
        ),
        migrations.AddIndex(
            model_name='cadaster',
            index=models.Index(fields=['bakhsh_sabti', 'nahiye_sabti'], name='landreg_cad_bakhsh__4d22c7_idx'),
        ),
        migrations.AddIndex(
            model_name='cadaster',
            index=models.Index(fields=['pelak'], name='landreg_cad_pelak_i_7d4ce9_idx'),
        ),
    ]
